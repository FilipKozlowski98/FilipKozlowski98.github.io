{"version":3,"sources":["Display.js","Navigation.js","utils.js","App.js","index.js"],"names":["DisplayWrapper","styled","div","DisplayQuote","h1","DisplayAuthor","h2","Display","props","quote","author","NavigationWrapper","PreviousButton","button","NextButton","Navigation","style","backgroundColor","firstQuote","cursor","onClick","quotes","length","changeFirst","changeQuotes","slice","databaseLength","Math","floor","random","MainWrapper","App","useState","database","changeDatabase","useEffect","fetch","then","response","json","data","fetchQuotes","at","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wNAEMA,EAAiBC,IAAOC,IAAV,+DAGdC,EAAeF,IAAOG,GAAV,oDAGZC,EAAgBJ,IAAOK,GAAV,0BAENC,EAAU,SAACC,GACtB,OACE,eAACR,EAAD,WACE,cAACG,EAAD,UACGK,EAAMC,MAAQD,EAAMC,MAAMA,MAAQ,eAErC,cAACJ,EAAD,UACGG,EAAMC,MAAQD,EAAMC,MAAMC,OAAS,0B,QCdtCC,EAAoBV,IAAOC,IAAV,qHAMjBU,EAAiBX,IAAOY,OAAV,+MAUdC,EAAab,IAAOY,OAAV,wOAYHE,EAAa,SAACP,GACzB,OACE,eAACG,EAAD,WACE,cAACC,EAAD,CACEI,MAAO,CACLC,gBAAgB,GAAD,OAAKT,EAAMU,WAAa,OAAS,SAChDC,OAAO,GAAD,OAAKX,EAAMU,WAAa,cAAgB,YAEhDE,QAAS,WACHZ,EAAMU,aAGNV,EAAMa,OAAOC,QAAU,GACzBd,EAAMe,aAAY,GAEpBf,EAAMgB,aAAahB,EAAMa,OAAOI,MAAM,GAAI,MAZ9C,SAeGjB,EAAMU,WAAa,GAAK,aAE3B,cAACJ,EAAD,CACEM,QAAS,WCxCS,IAACM,EDyCblB,EAAMU,YACRV,EAAMe,aAAY,GAEpBf,EAAMgB,aAAN,sBACKhB,EAAMa,QADX,EC5CiBK,ED8CJlB,EAAMkB,eC7CpBC,KAAKC,MAAMD,KAAKE,UAAYH,EAAiB,SDsChD,SAWGlB,EAAMU,WAAa,WAAa,aExDnCY,EAAc7B,IAAOC,IAAV,uKA+BF6B,EAtBH,WACV,MAA+BC,mBAAS,IAAxC,mBAAOX,EAAP,KAAeG,EAAf,KACA,EAAkCQ,mBAAS,EAAC,IAA5C,mBAAOd,EAAP,KAAmBK,EAAnB,KACA,EAAmCS,mBAAS,IAA5C,mBAAOC,EAAP,KAAiBC,EAAjB,KAKA,OAJAC,qBAAU,YDnBe,SAACD,GAC1BE,MACE,yIAECC,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACG,GACLN,EAAeM,MCYjBC,CAAYP,KACX,IAGD,eAACJ,EAAD,WACE,cAAC,EAAD,CAASrB,MAAOwB,EAASZ,EAAOqB,IAAI,MACpC,cAAC,EAAD,CACElB,aAAcA,EACdD,YAAaA,EACbG,eAAgBO,EAASX,OACzBJ,WAAYA,EACZG,OAAQA,QC1BhBsB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f99d27ce.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst DisplayWrapper = styled.div`\r\n  margin: 100px 100px 30px 100px;\r\n`;\r\nconst DisplayQuote = styled.h1`\r\n  margin-bottom: 20px;\r\n`;\r\nconst DisplayAuthor = styled.h2``;\r\n\r\nexport const Display = (props) => {\r\n  return (\r\n    <DisplayWrapper>\r\n      <DisplayQuote>\r\n        {props.quote ? props.quote.quote : \"LET'S GO !\"}\r\n      </DisplayQuote>\r\n      <DisplayAuthor>\r\n        {props.quote ? props.quote.author : \"gimme some quotes\"}\r\n      </DisplayAuthor>\r\n    </DisplayWrapper>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\nimport { drawNumber } from \"./utils\";\r\n\r\nconst NavigationWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 70px 0;\r\n`;\r\nconst PreviousButton = styled.button`\r\n  width: 200px;\r\n  height: 100px;\r\n  border-radius: 20px;\r\n  border: 5px solid black;\r\n  margin-right: 50px;\r\n  &:active {\r\n    box-shadow: inset -8px 9px 21px 2px #000000;\r\n  }\r\n`;\r\nconst NextButton = styled.button`\r\n  width: 200px;\r\n  height: 100px;\r\n  border-radius: 20px;\r\n  border: 5px solid black;\r\n  background-color: green;\r\n  cursor: pointer;\r\n  &:active {\r\n    box-shadow: inset -8px 9px 21px 2px #000000;\r\n  }\r\n`;\r\n\r\nexport const Navigation = (props) => {\r\n  return (\r\n    <NavigationWrapper>\r\n      <PreviousButton\r\n        style={{\r\n          backgroundColor: `${props.firstQuote ? \"grey\" : \"green\"}`,\r\n          cursor: `${props.firstQuote ? \"not-allowed\" : \"pointer\"}`,\r\n        }}\r\n        onClick={() => {\r\n          if (props.firstQuote) {\r\n            return;\r\n          }\r\n          if (props.quotes.length <= 1) {\r\n            props.changeFirst(true);\r\n          }\r\n          props.changeQuotes(props.quotes.slice(0, -1));\r\n        }}\r\n      >\r\n        {props.firstQuote ? \"\" : \"PREVIOUS\"}\r\n      </PreviousButton>\r\n      <NextButton\r\n        onClick={() => {\r\n          if (props.firstQuote) {\r\n            props.changeFirst(false);\r\n          }\r\n          props.changeQuotes([\r\n            ...props.quotes,\r\n            drawNumber(props.databaseLength),\r\n          ]);\r\n        }}\r\n      >\r\n        {props.firstQuote ? \"QUOTES !\" : \"NEXT\"}\r\n      </NextButton>\r\n    </NavigationWrapper>\r\n  );\r\n};\r\n","export const fetchQuotes = (changeDatabase) => {\r\n  fetch(\r\n    \"https://gist.githubusercontent.com/natebass/b0a548425a73bdf8ea5c618149fe1fce/raw/f4231cd5961f026264bb6bb3a6c41671b044f1f4/quotes.json\"\r\n  )\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .then((data) => {\r\n      changeDatabase(data);\r\n    });\r\n};\r\n\r\nexport const drawNumber = (databaseLength) => {\r\n  return Math.floor(Math.random() * (databaseLength - 1));\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Display } from \"./Display\";\r\nimport { Navigation } from \"./Navigation\";\r\nimport { fetchQuotes } from \"./utils\";\r\n\r\nconst MainWrapper = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst App = () => {\r\n  const [quotes, changeQuotes] = useState([]);\r\n  const [firstQuote, changeFirst] = useState([true]);\r\n  const [database, changeDatabase] = useState([]);\r\n  useEffect(() => {\r\n    fetchQuotes(changeDatabase);\r\n  }, []);\r\n\r\n  return (\r\n    <MainWrapper>\r\n      <Display quote={database[quotes.at(-1)]} />\r\n      <Navigation\r\n        changeQuotes={changeQuotes}\r\n        changeFirst={changeFirst}\r\n        databaseLength={database.length}\r\n        firstQuote={firstQuote}\r\n        quotes={quotes}\r\n      />\r\n    </MainWrapper>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./styles.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}